<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7by3pNfrL2QJ7ksnQq7cAAAAAElFTkSuQmCC
</value>
  </data>
</root>